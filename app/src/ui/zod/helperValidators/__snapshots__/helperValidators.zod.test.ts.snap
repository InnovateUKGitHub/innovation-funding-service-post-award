// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`helperValidators emptyStringToUndefinedValidation accept empty string 1`] = `
{
  "data": undefined,
  "success": true,
}
`;

exports[`helperValidators emptyStringToUndefinedValidation accept undefined 1`] = `
{
  "data": undefined,
  "success": true,
}
`;

exports[`helperValidators emptyStringToUndefinedValidation decline filled string 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "message": "Invalid input",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators emptyStringToUndefinedValidation decline number 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [],
    "message": "Expected string, received number"
  }
]],
  "success": false,
}
`;

exports[`helperValidators evaluateObject Invalid 'NOT marked as complete' 1`] = `
{
  "error": [ZodError: [
  {
    "received": "BANANA",
    "code": "invalid_literal",
    "expected": "APPLE",
    "path": [
      "something"
    ],
    "message": "Invalid literal value, expected \\"APPLE\\""
  }
]],
  "success": false,
}
`;

exports[`helperValidators evaluateObject Invalid 'marked as complete' 1`] = `
{
  "error": [ZodError: [
  {
    "received": "APPLE",
    "code": "invalid_literal",
    "expected": "BANANA",
    "path": [
      "something"
    ],
    "message": "Invalid literal value, expected \\"BANANA\\""
  }
]],
  "success": false,
}
`;

exports[`helperValidators evaluateObject Invalid 1`] = `
{
  "error": [ZodError: [
  {
    "received": "DURIAN",
    "code": "invalid_literal",
    "expected": "APPLE",
    "path": [
      "something"
    ],
    "message": "Invalid literal value, expected \\"APPLE\\""
  }
]],
  "success": false,
}
`;

exports[`helperValidators evaluateObject Mal 1`] = `
{
  "error": [ZodError: [
  {
    "received": "DURIAN",
    "code": "invalid_literal",
    "expected": "BANANA",
    "path": [
      "something"
    ],
    "message": "Invalid literal value, expected \\"BANANA\\""
  }
]],
  "success": false,
}
`;

exports[`helperValidators evaluateObject Valid 'NOT marked as complete' 1`] = `
{
  "data": {
    "markedAsComplete": false,
    "something": "BANANA",
  },
  "success": true,
}
`;

exports[`helperValidators evaluateObject Valid 'marked as complete' 1`] = `
{
  "data": {
    "markedAsComplete": true,
    "something": "APPLE",
  },
  "success": true,
}
`;

exports[`helperValidators getSingleFileValidation .docm 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.invalid_extension",
      "allowedExtensions": [
        "pdf",
        "xps",
        "doc",
        "docx",
        "rtf",
        "txt",
        "csv",
        "odt",
        "ppt",
        "pptx",
        "odp",
        "xls",
        "xlsx",
        "ods",
        "jpg",
        "jpeg",
        "png",
        "odg"
      ],
      "root": "",
      "dir": "",
      "base": "awoo.docm",
      "ext": ".docm",
      "name": "awoo"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation .tar.gz 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.invalid_extension",
      "allowedExtensions": [
        "pdf",
        "xps",
        "doc",
        "docx",
        "rtf",
        "txt",
        "csv",
        "odt",
        "ppt",
        "pptx",
        "odp",
        "xls",
        "xlsx",
        "ods",
        "jpg",
        "jpeg",
        "png",
        "odg"
      ],
      "root": "",
      "dir": "",
      "base": "awoo.tar.gz",
      "ext": ".gz",
      "name": "awoo.tar"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation .webm 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.invalid_extension",
      "allowedExtensions": [
        "pdf",
        "xps",
        "doc",
        "docx",
        "rtf",
        "txt",
        "csv",
        "odt",
        "ppt",
        "pptx",
        "odp",
        "xls",
        "xlsx",
        "ods",
        "jpg",
        "jpeg",
        "png",
        "odg"
      ],
      "root": "",
      "dir": "",
      "base": "awoo.webm",
      "ext": ".webm",
      "name": "awoo"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation Linux/UNIX hidden file 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.no_filename",
      "root": "",
      "dir": "",
      "base": ".gitignore",
      "ext": "",
      "name": ".gitignore"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation crazy characters file 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.bad_characters",
      "characters": [
        [
          "*",
          "fs"
        ],
        [
          "\\"",
          "fs"
        ]
      ],
      "count": 2,
      "root": "",
      "dir": "",
      "base": "*&\\"£&.pptx",
      "ext": ".pptx",
      "name": "*&\\"£&"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation no basename file 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.no_filename",
      "root": "",
      "dir": "",
      "base": ".pptx",
      "ext": "",
      "name": ".pptx"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation no prefix file 1`] = `
{
  "error": [ZodError: [
  {
    "code": "custom",
    "params": {
      "i18n": "errors.invalid_extension",
      "root": "",
      "dir": "",
      "base": "jjajangmyeon",
      "ext": "",
      "name": "jjajangmyeon"
    },
    "path": [
      "fileName"
    ],
    "message": "Invalid input"
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation standard file 1`] = `
{
  "data": {
    "fileName": "awoo.png",
    "size": 120,
  },
  "success": true,
}
`;

exports[`helperValidators getSingleFileValidation very big sized file 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_big",
    "maximum": 100000,
    "type": "number",
    "inclusive": true,
    "exact": false,
    "message": "Number must be less than or equal to 100000",
    "path": [
      "size"
    ]
  }
]],
  "success": false,
}
`;

exports[`helperValidators getSingleFileValidation zero sized file 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "number",
    "inclusive": true,
    "exact": false,
    "message": "Number must be greater than or equal to 1",
    "path": [
      "size"
    ]
  }
]],
  "success": false,
}
`;

exports[`helperValidators partnerIdValidation accept project participant id 1`] = `
{
  "data": "a0D2600000zXrAIEA0",
  "success": true,
}
`;

exports[`helperValidators partnerIdValidation decline account id 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_string",
    "validation": {
      "startsWith": "a0D"
    },
    "message": "Invalid input: must start with \\"a0D\\"",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators partnerIdValidation decline empty string 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_string",
    "validation": {
      "startsWith": "a0D"
    },
    "message": "Invalid input: must start with \\"a0D\\"",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators partnerIdValidation decline project id 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_string",
    "validation": {
      "startsWith": "a0D"
    },
    "message": "Invalid input: must start with \\"a0D\\"",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators periodIdValidation accept 1 1`] = `
{
  "data": 1,
  "success": true,
}
`;

exports[`helperValidators periodIdValidation accept 2 1`] = `
{
  "data": 2,
  "success": true,
}
`;

exports[`helperValidators periodIdValidation accept 3 1`] = `
{
  "data": 3,
  "success": true,
}
`;

exports[`helperValidators periodIdValidation accept 5 1`] = `
{
  "data": 5,
  "success": true,
}
`;

exports[`helperValidators periodIdValidation accept string int 1`] = `
{
  "data": 4,
  "success": true,
}
`;

exports[`helperValidators periodIdValidation decline 0 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_small",
    "minimum": 0,
    "type": "number",
    "inclusive": false,
    "exact": false,
    "message": "Number must be greater than 0",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators periodIdValidation decline absurd number 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_big",
    "maximum": 500,
    "type": "number",
    "inclusive": false,
    "exact": false,
    "message": "Number must be less than 500",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators periodIdValidation decline decimal 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "integer",
    "received": "float",
    "message": "Expected integer, received float",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators periodIdValidation decline infinity 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "integer",
    "received": "float",
    "message": "Expected integer, received float",
    "path": []
  },
  {
    "code": "too_big",
    "maximum": 500,
    "type": "number",
    "inclusive": false,
    "exact": false,
    "message": "Number must be less than 500",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators projectIdValidation accept project id 1`] = `
{
  "data": "a0E2600000olswLEAQ",
  "success": true,
}
`;

exports[`helperValidators projectIdValidation decline account id 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_string",
    "validation": {
      "startsWith": "a0E"
    },
    "message": "Invalid input: must start with \\"a0E\\"",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators projectIdValidation decline empty string 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_string",
    "validation": {
      "startsWith": "a0E"
    },
    "message": "Invalid input: must start with \\"a0E\\"",
    "path": []
  }
]],
  "success": false,
}
`;

exports[`helperValidators projectIdValidation decline project participant id 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_string",
    "validation": {
      "startsWith": "a0E"
    },
    "message": "Invalid input: must start with \\"a0E\\"",
    "path": []
  }
]],
  "success": false,
}
`;
