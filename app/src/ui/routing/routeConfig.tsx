import * as Containers from "@ui/containers";
import { DeveloperHomePage } from "@ui/containers/developer/home.page";
import { DeveloperProjectCreatorPage } from "@ui/containers/developer/ProjectCreator.page";
import { DeveloperUserSwitcherPage } from "@ui/containers/developer/UserSwitcher.page";

export type IRoutes = typeof routeConfig;
export type RouteKeys = keyof IRoutes;

export const routeConfig = {
  allClaimsDashboard: Containers.AllClaimsDashboardRoute,
  BroadcastPage: Containers.BroadcastPageRoute,
  claimsDashboard: Containers.ClaimsDashboardRoute,
  claimDetails: Containers.ClaimsDetailsRoute,
  claimDetailDocuments: Containers.ClaimDetailDocumentsRoute,
  claimDocuments: Containers.ClaimDocumentsRoute,
  claimForecast: Containers.ClaimForecastRoute,
  claimLineItems: Containers.ClaimLineItemsRoute,
  claimSummary: Containers.ClaimSummaryRoute,
  error: Containers.ErrorRoute,
  errorNotFound: Containers.ErrorNotFoundRoute,
  financeSummary: Containers.FinanceSummaryRoute,
  failedBankCheckConfirmation: Containers.FailedBankCheckConfirmationRoute,
  home: DeveloperHomePage,
  developerUserSwitcherPage: DeveloperUserSwitcherPage,
  developerProjectCreatorPage: DeveloperProjectCreatorPage,
  monitoringReportCreate: Containers.MonitoringReportCreateRoute,
  monitoringReportDashboard: Containers.MonitoringReportDashboardRoute,
  monitoringReportDelete: Containers.MonitoringReportDeleteRoute,
  monitoringReportWorkflow: Containers.MonitoringReportWorkflowRoute,
  monitoringReportPreparePeriod: Containers.MonitoringReportPreparePeriodRoute,
  partnerDetails: Containers.PartnerDetailsRoute,
  partnerDetailsEdit: Containers.PartnerDetailsEditRoute,
  prepareClaim: Containers.PrepareClaimRoute,
  prepareClaimLineItems: Containers.EditClaimLineItemsRoute,
  loansSummary: Containers.LoansSummaryRoute,
  loansRequest: Containers.LoansRequestRoute,
  projectChangeRequestAddType: Containers.ProjectChangeRequestAddTypeRoute,
  pcrCreate: Containers.PCRCreateRoute,
  pcrDetails: Containers.PCRDetailsRoute,
  pcrDelete: Containers.PCRDeleteRoute,
  pcrFinancialVirementEditPartnerLevel: Containers.FinancialVirementEditPartnerLevelRoute,
  pcrFinancialVirementEditCostCategoryLevel: Containers.FinancialVirementEditRoute,
  pcrFinancialVirementDetails: Containers.FinancialVirementDetailsRoute,
  pcrPrepare: Containers.ProjectChangeRequestPrepareRoute,
  pcrPrepareItem: Containers.PCRPrepareItemRoute,
  pcrSpendProfileCostsSummary: Containers.PCRSpendProfileCostsSummaryRoute,
  pcrSpendProfileReviewCostsSummary: Containers.PCRSpendProfileReviewCostsSummaryRoute,
  pcrPrepareSpendProfileAddCost: Containers.PCRSpendProfileAddCostRoute,
  pcrPrepareSpendProfileDeleteCost: Containers.PCRSpendProfileDeleteCostRoute,
  pcrPrepareSpendProfileEditCost: Containers.PCRSpendProfileEditCostRoute,
  pcrSpendProfileOverheadDocument: Containers.PCRSpendProfileOverheadDocumentRoute,
  pcrPrepareReasoning: Containers.PCRPrepareReasoningRoute,
  pcrReview: Containers.PCRReviewRoute,
  pcrReviewItem: Containers.PCRReviewItemRoute,
  pcrReviewReasoning: Containers.PCRReviewReasoningRoute,
  pcrViewItem: Containers.PCRViewItemRoute,
  pcrViewReasoning: Containers.PCRViewReasoningRoute,
  pcrsDashboard: Containers.PCRsDashboardRoute,
  projectDashboard: Containers.ProjectDashboardRoute,
  projectDetails: Containers.ProjectDetailsRoute,
  projectDocuments: Containers.ProjectDocumentsRoute,
  projectOverview: Containers.ProjectOverviewRoute,
  projectSetup: Containers.ProjectSetupRoute,
  projectSetupSpendProfile: Containers.ProjectSetupSpendProfileRoute,
  projectSetupBankDetails: Containers.ProjectSetupBankDetailsRoute,
  projectSetupPostcode: Containers.ProjectSetupPartnerPostcodeRoute,
  projectSetupBankStatement: Containers.ProjectSetupBankStatementRoute,
  projectSetupBankDetailsVerify: Containers.ProjectSetupBankDetailsVerifyRoute,
  reviewClaim: Containers.ReviewClaimRoute,
  reviewClaimLineItems: Containers.ReviewClaimLineItemsRoute,
  forecastDashboard: Containers.ForecastDashboardRoute,
  forecastDetails: Containers.ForecastDetailsRoute,
  forecastUpdate: Containers.UpdateForecastRoute,
};

export const getRoutes = () => Object.entries(routeConfig);
