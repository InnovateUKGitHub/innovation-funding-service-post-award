// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Context should contain the repositories 1`] = `
Object {
  "accounts": AccountsRepository {
    "getSalesforceConnection": [Function],
    "jesEnabled": "Yes",
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Name",
      "JES_Organisation__c",
    ],
    "salesforceObjectName": "Account",
  },
  "broadcast": BroadcastRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": BroadcastMapper {
      "clock": Clock {},
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Name",
      "Acc_StartDate__c",
      "Acc_EndDate__c",
      "Acc_Message__c",
    ],
    "salesforceObjectName": "Acc_BroadcastMessage__c",
  },
  "claimDetails": ClaimDetailsRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Claims Detail",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_CostCategory__c",
      "Acc_PeriodCostCategoryTotal__c",
      "Acc_ProjectParticipant__r.Id",
      "Acc_ProjectParticipant__r.Acc_ProjectId__c",
      "Acc_ProjectPeriodNumber__c",
      "Acc_ProjectPeriodStartDate__c",
      "Acc_ProjectPeriodEndDate__c",
      "Acc_ReasonForDifference__c",
    ],
    "salesforceObjectName": "Acc_Claims__c",
  },
  "claimLineItems": ClaimLineItemRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Claims Line Item",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_LineItemDescription__c",
      "Acc_LineItemCost__c",
      "Acc_CostCategory__c",
      "Acc_ProjectPeriodNumber__c",
      "Acc_ProjectParticipant__c",
      "LastModifiedDate",
    ],
    "salesforceObjectName": "Acc_Claims__c",
  },
  "claimStatusChanges": ClaimStatusChangeRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_Claim__c",
      "Acc_PreviousClaimStatus__c",
      "Acc_NewClaimStatus__c",
      "Acc_ExternalComment__c",
      "Acc_ParticipantVisibility__c",
      "Acc_CreatedByAlias__c",
      "CreatedDate",
    ],
    "salesforceObjectName": "Acc_StatusChange__c",
  },
  "claimTotalCostCategory": ClaimTotalCostCategoryRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Total Cost Category",
    "salesforceFieldNames": Array [
      "Acc_CostCategory__c",
      "Acc_CostCategoryTotal__c",
      "Acc_ProjectParticipant__c",
    ],
    "salesforceObjectName": "Acc_Claims__c",
  },
  "claims": ClaimRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Total Project Period",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_ProjectParticipant__r.Id",
      "Acc_ProjectParticipant__r.Acc_ProjectId__c",
      "Acc_ProjectParticipant__r.Acc_OverheadRate__c",
      "Acc_ProjectParticipant__r.Acc_ProjectRole__c",
      "Acc_ProjectParticipant__r.Acc_AccountId__r.Name",
      "LastModifiedDate",
      "Acc_PCF_Status__c",
      "Acc_IAR_Status__c",
      "Acc_ClaimStatus__c",
      "toLabel(Acc_ClaimStatus__c) ClaimStatusLabel",
      "Acc_ProjectPeriodStartDate__c",
      "Acc_ProjectPeriodEndDate__c",
      "Acc_ProjectPeriodNumber__c",
      "Acc_ProjectPeriodCost__c",
      "Acc_ApprovedDate__c",
      "Acc_PaidDate__c",
      "Acc_ReasonForDifference__c",
      "Acc_IARRequired__c",
      "Acc_FinalClaim__c",
      "Acc_TotalCostsSubmitted__c",
      "Acc_TotalCostsApproved__c",
      "Acc_TotalDeferredAmount__c",
      "Acc_PeriodCoststobePaid__c",
    ],
    "salesforceObjectName": "Acc_Claims__c",
  },
  "companies": CompaniesHouse {},
  "costCategories": CostCategoryRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": SalesforceCostCategoryMapper {
      "clock": Clock {},
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_CostCategoryName__c",
      "Acc_DisplayOrder__c",
      "Acc_OrganisationType__c",
      "Acc_CompetitionType__c",
      "Acc_CostCategoryDescription__c",
      "Acc_HintText__c",
      "Acc_OverrideAwardRate__c",
    ],
    "salesforceObjectName": "Acc_CostCategory__c",
  },
  "documents": DocumentsRepository {
    "contentDocumentLinkRepository": ContentDocumentLinkRepository {
      "getSalesforceConnection": [Function],
      "logger": Logger {
        "identifier": "Context",
        "options": Object {
          "logLevel": 5,
          "prefixLines": Array [
            "user@email.com",
          ],
        },
      },
      "mapper": DefaultMapper {},
      "payloadErrors": Object {
        "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
        "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
        "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
      },
      "salesforceFieldNames": Array [
        "Id",
        "ContentDocumentId",
        "LinkedEntityId",
      ],
      "salesforceObjectName": "ContentDocumentLink",
    },
    "contentDocumentRepository": ContentDocumentRepository {
      "getSalesforceConnection": [Function],
      "logger": Logger {
        "identifier": "Context",
        "options": Object {
          "logLevel": 5,
          "prefixLines": Array [
            "user@email.com",
          ],
        },
      },
      "mapper": DefaultMapper {},
      "payloadErrors": Object {
        "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
        "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
        "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
      },
      "salesforceFieldNames": Array [
        "Id",
      ],
      "salesforceObjectName": "ContentDocument",
    },
    "contentVersionRepository": ContentVersionRepository {
      "getSalesforceConnection": [Function],
      "logger": Logger {
        "identifier": "Context",
        "options": Object {
          "logLevel": 5,
          "prefixLines": Array [
            "user@email.com",
          ],
        },
      },
      "mapper": DefaultMapper {},
      "payloadErrors": Object {
        "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
        "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
        "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
      },
      "salesforceFieldNames": Array [
        "Id",
        "Title",
        "FileExtension",
        "ContentDocumentId",
        "ContentSize",
        "FileType",
        "Description",
        "CreatedDate",
        "Acc_LastModifiedByAlias__c",
        "LastModifiedBy.Contact.Account.Name",
        "Acc_UploadedByMe__c",
        "Owner.Username",
      ],
      "salesforceObjectName": "ContentVersion",
    },
    "logger": Logger {
      "identifier": "DocumentsRepository",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [],
      },
    },
  },
  "financialLoanVirements": FinancialLoanVirementRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_ProjectChangeRequest__c",
      "RecordTypeId",
      "Loan_PeriodNumber__c",
      "Loan_CurrentDrawdownValue__c",
      "Loan_CurrentDrawdownDate__c",
      "Loan_NewDrawdownValue__c",
      "Loan_NewDrawdownDate__c",
      "Loan_LoanDrawdownRequest__c",
      "Loan_DrawdownStatus__c",
    ],
    "salesforceObjectName": "Acc_Virements__c",
  },
  "financialVirements": FinancialVirementRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_ProjectChangeRequest__c",
      "Acc_Profile__c",
      "Acc_Profile__r.Acc_CostCategory__c",
      "Acc_Profile__r.Acc_ProjectParticipant__c",
      "Acc_ProjectParticipant__c",
      "Acc_ClaimedCostsToDate__c",
      "Acc_CurrentCosts__c",
      "Acc_NewCosts__c",
      "Acc_CurrentAwardRate__c",
      "Acc_NewAwardRate__c",
      "Acc_NewRemainingGrant__c",
      "Acc_NewTotalEligibleCosts__c",
      "RecordTypeId",
    ],
    "salesforceObjectName": "Acc_Virements__c",
    "virementWhereQuery": [Function],
  },
  "loans": LoanRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": LoanMapper {
      "clock": Clock {},
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_PeriodNumber__c",
      "Loan_DrawdownStatus__c",
      "Acc_GranttobePaid__c",
      "Loan_LatestForecastDrawdown__c",
      "Loan_PlannedDateForDrawdown__c",
      "Loan_UserComments__c",
      "Acc_ProjectParticipant__r.Id",
    ],
    "salesforceObjectName": "Acc_Prepayment__c",
    "salesforcePrePaymentTable": "Pre_Payments__r",
  },
  "monitoringReportHeader": MonitoringReportHeaderRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Monitoring Header",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_MonitoringReportStatus__c",
      "toLabel(Acc_MonitoringReportStatus__c) MonitoringReportStatusName",
      "Acc_Project__c",
      "Acc_ProjectPeriodNumber__c",
      "Acc_PeriodStartDate__c",
      "Acc_PeriodEndDate__c",
      "Acc_AddComments__c",
      "LastModifiedDate",
    ],
    "salesforceObjectName": "Acc_MonitoringAnswer__c",
  },
  "monitoringReportQuestions": MonitoringReportQuestionsRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_QuestionName__c",
      "Acc_DisplayOrder__c",
      "Acc_QuestionScore__c",
      "Acc_QuestionText__c",
      "Acc_QuestionDescription__c",
      "Acc_ActiveFlag__c",
      "Acc_ScoredQuestion__c",
    ],
    "salesforceObjectName": "Acc_MonitoringQuestion__c",
  },
  "monitoringReportResponse": MonitoringReportResponseRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Monitoring Answer",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_MonitoringHeader__c",
      "Acc_Question__c",
      "Acc_QuestionComments__c",
    ],
    "salesforceObjectName": "Acc_MonitoringAnswer__c",
  },
  "monitoringReportStatusChange": MonitoringReportStatusChangeRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_MonitoringReport__c",
      "Acc_PreviousMonitoringReportStatus__c",
      "Acc_NewMonitoringReportStatus__c",
      "Acc_CreatedByAlias__c",
      "CreatedDate",
      "Acc_ExternalComment__c",
    ],
    "salesforceObjectName": "Acc_StatusChange__c",
  },
  "partners": PartnerRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": SalesforcePartnerMapper {
      "clock": Clock {},
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_AccountId__r.Id",
      "Acc_AccountId__r.Name",
      "Acc_OrganisationType__c",
      "Acc_ParticipantType__c",
      "Acc_ParticipantSize__c",
      "Acc_TotalParticipantCosts__c",
      "Acc_TotalApprovedCosts__c",
      "Acc_Cap_Limit__c",
      "Acc_Award_Rate__c",
      "Acc_ProjectRole__c",
      "toLabel(Acc_ProjectRole__c) ProjectRoleName",
      "Acc_ProjectId__r.Id",
      "Acc_ProjectId__r.Acc_CompetitionType__c",
      "Acc_ProjectId__r.Acc_CompetitionId__r.Name",
      "Acc_TotalPaidCosts__c",
      "Acc_TotalFutureForecastsForParticipant__c",
      "Acc_ForecastLastModifiedDate__c",
      "Acc_ClaimsForReview__c",
      "Acc_Overdue_Project__c",
      "Acc_ClaimsOverdue__c",
      "Acc_ClaimsUnderQuery__c",
      "Acc_TrackingClaims__c",
      "Acc_OverheadRate__c",
      "Acc_ParticipantStatus__c",
      "toLabel(Acc_ParticipantStatus__c) ParticipantStatusLabel",
      "Acc_TotalCostsSubmitted__c",
      "Acc_TotalCostsAwarded__c",
      "Acc_AuditReportFrequency__c",
      "toLabel(Acc_AuditReportFrequency__c) AuditReportFrequencyName",
      "Acc_TotalPrepayment__c",
      "Acc_Postcode__c",
      "Acc_NewForecastNeeded__c",
      "Acc_SpendProfileCompleted__c",
      "toLabel(Acc_SpendProfileCompleted__c) SpendProfileStatusLabel",
      "Acc_BankCheckState__c",
      "Acc_BankCheckCompleted__c",
      "toLabel(Acc_BankCheckCompleted__c) BankCheckCompletedLabel",
      "Acc_RegistrationNumber__c",
      "Acc_SortCode__c",
      "Acc_AccountNumber__c",
      "Acc_FirstName__c",
      "Acc_LastName__c",
      "Acc_AddressStreet__c",
      "Acc_AddressBuildingName__c",
      "Acc_AddressLocality__c",
      "Acc_AddressTown__c",
      "Acc_AddressPostcode__c",
      "Acc_ValidationCheckPassed__c",
      "Acc_Iban__c",
      "Acc_ValidationConditionsSeverity__c",
      "Acc_ValidationConditionsCode__c",
      "Acc_ValidationConditionsDesc__c",
      "Acc_PersonalDetailsScore__c",
      "Acc_AddressScore__c",
      "Acc_CompanyNameScore__c",
      "Acc_RegNumberScore__c",
      "Acc_VerificationConditionsSeverity__c",
      "Acc_VerificationConditionsCode__c",
      "Acc_VerificationConditionsDesc__c",
      "Acc_TotalGrantApproved__c",
      "Acc_RemainingParticipantGrant__c",
      "Acc_NonfundedParticipant__c",
    ],
    "salesforceObjectName": "Acc_ProjectParticipant__c",
  },
  "pcrSpendProfile": PcrSpendProfileRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "PCR Spend Profile",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_ProjectChangeRequest__c",
      "Acc_CostCategoryID__c",
      "RecordTypeId",
      "Acc_TotalCost__c",
      "Acc_ItemDescription__c",
      "Acc_DateSecured__c",
      "Acc_GrossCostOfRole__c",
      "Acc_Rate__c",
      "Acc_DaysSpentOnProject__c",
      "Acc_OverheadRate__c",
      "Acc_Quantity__c",
      "Acc_CostPerItem__c",
      "Acc_Country__c",
      "Acc_RoleAndDescription__c",
      "Acc_NewOrExisting__c",
      "toLabel(Acc_NewOrExisting__c) NewOrExistingLabel",
      "Acc_DepreciationPeriod__c",
      "Acc_NetPresentValue__c",
      "Acc_ResidualValue__c",
      "Acc_Utilisation__c",
      "Acc_NumberOfTimes__c",
      "Acc_CostEach__c",
    ],
    "salesforceObjectName": "Acc_IFSSpendProfile__c",
  },
  "permissionGroups": PermissionGroupRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": SalesforcePermissionGroupMapper {
      "clock": Clock {},
      "salesforcePermissionGroups": Object {
        "Acc_Claims_Team_Lead_Pending_Assignment": 1,
      },
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "DeveloperName",
    ],
    "salesforceObjectName": "Group",
  },
  "profileDetails": ProfileDetailsRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Profile Detail",
    "requiredCategoryType": "Total Cost Category",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_CostCategory__c",
      "Acc_InitialForecastCost__c",
      "Acc_LatestForecastCost__c",
      "Acc_ProjectParticipant__c",
      "Acc_ProjectPeriodNumber__c",
      "Acc_ProjectPeriodStartDate__c",
      "Acc_ProjectPeriodEndDate__c",
    ],
    "salesforceObjectName": "Acc_Profile__c",
  },
  "profileTotalCostCategory": ProfileTotalCostCategoryRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Total Cost Category",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_CostCategory__c",
      "Acc_CostCategoryGOLCost__c",
      "Acc_ProjectParticipant__c",
    ],
    "salesforceObjectName": "Acc_Profile__c",
  },
  "profileTotalPeriod": ProfileTotalPeriodRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Total Project Period",
    "salesforceFieldNames": Array [
      "LastModifiedDate",
      "Acc_ProjectParticipant__c",
      "Acc_ProjectPeriodNumber__c",
      "Acc_ProjectPeriodStartDate__c",
      "Acc_ProjectPeriodEndDate__c",
      "Acc_PeriodLatestForecastCost__c",
    ],
    "salesforceObjectName": "Acc_Profile__c",
  },
  "projectChangeRequestStatusChange": ProjectChangeRequestStatusChangeRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": PCRStatusChangeMapper {
      "clock": Clock {},
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_ProjectChangeRequest__c",
      "Acc_PreviousProjectChangeRequestStatus__c",
      "Acc_NewProjectChangeRequestStatus__c",
      "CreatedDate",
      "Acc_ExternalComment__c",
      "Acc_CreatedByAlias__c",
      "Acc_ParticipantVisibility__c",
    ],
    "salesforceObjectName": "Acc_StatusChange__c",
  },
  "projectChangeRequests": ProjectChangeRequestRepository {
    "getRecordTypeId": [Function],
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "recordType": "Request Header",
    "salesforceFieldNames": Array [
      "Id",
      "Acc_RequestHeader__c",
      "Acc_RequestNumber__c",
      "Acc_Status__c",
      "toLabel(Acc_Status__c) StatusName",
      "CreatedDate",
      "LastModifiedDate",
      "RecordTypeId",
      "Acc_Project_Participant__c",
      "Acc_Project__c",
      "Acc_RequestHeader__r.Acc_Project__r.Acc_CompetitionId__r.Acc_TypeofAid__c",
      "Acc_NewOrganisationName__c",
      "Acc_NewProjectSummary__c",
      "Acc_NewPublicDescription__c",
      "Acc_Reasoning__c",
      "Acc_MarkedAsComplete__c",
      "Acc_AdditionalNumberofMonths__c",
      "Acc_NewProjectDuration__c",
      "Acc_ExistingProjectDuration__c",
      "Acc_RemovalPeriod__c",
      "toLabel(Acc_MarkedAsComplete__c) MarkedAsCompleteName",
      "Acc_Comments__c",
      "Acc_SuspensionStarts__c",
      "Acc_SuspensionEnds__c",
      "Acc_PublicDescriptionSnapshot__c",
      "Acc_ProjectSummarySnapshot__c",
      "Acc_ExistingPartnerName__c",
      "Acc_Nickname__c",
      "Acc_ProjectRole__c",
      "toLabel(Acc_ProjectRole__c) ProjectRoleLabel",
      "Acc_ParticipantType__c",
      "toLabel(Acc_ParticipantType__c) ParticipantTypeLabel",
      "Acc_OrganisationName__c",
      "Acc_RegisteredAddress__c",
      "Acc_RegistrationNumber__c",
      "Acc_ParticipantSize__c",
      "toLabel(Acc_ParticipantSize__c) ParticipantSizeLabel",
      "Acc_Employees__c",
      "Acc_TurnoverYearEnd__c",
      "Acc_Turnover__c",
      "Acc_Location__c",
      "toLabel(Acc_Location__c) ProjectLocationLabel",
      "Acc_ProjectCity__c",
      "Acc_projectPostcode__c",
      "Acc_Contact1ProjectRole__c",
      "toLabel(Acc_Contact1ProjectRole__c) Contact1ProjectRoleLabel",
      "Acc_Contact1Forename__c",
      "Acc_Contact1Surname__c",
      "Acc_Contact1Phone__c",
      "Acc_Contact1EmailAddress__c",
      "Acc_Contact2ProjectRole__c",
      "toLabel(Acc_Contact2ProjectRole__c) Contact2ProjectRoleLabel",
      "Acc_Contact2Forename__c",
      "Acc_Contact2Surname__c",
      "Acc_Contact2Phone__c",
      "Acc_Contact2EmailAddress__c",
      "Acc_AwardRate__c",
      "Acc_OtherFunding__c",
      "Acc_TotalOtherFunding__c",
      "Acc_CommercialWork__c",
      "Acc_TSBReference__c",
      "Acc_GrantMovingOverFinancialYear__c",
      "Loan_ProjectStartDate__c",
      "Loan_Duration__c",
      "Loan_ExtensionPeriod__c",
      "Loan_ExtensionPeriodChange__c",
      "Loan_RepaymentPeriod__c",
      "Loan_RepaymentPeriodChange__c",
    ],
    "salesforceObjectName": "Acc_ProjectChangeRequest__c",
    "toOptionalSFDate": [Function],
  },
  "projectContacts": ProjectContactsRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_AccountId__c",
      "Acc_ProjectId__c",
      "Acc_EmailOfSFContact__c",
      "Acc_Role__c",
      "toLabel(Acc_Role__c) RoleName",
      "Acc_ContactId__r.Id",
      "Acc_ContactId__r.Name",
      "Acc_ContactId__r.Email",
      "Acc_UserId__r.Name",
    ],
    "salesforceObjectName": "Acc_ProjectContactLink__c",
  },
  "projects": ProjectRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": DefaultMapper {},
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Acc_ClaimFrequency__c",
      "Acc_EndDate__c",
      "Acc_GOLTotalCostAwarded__c",
      "Acc_CompetitionType__c",
      "Acc_IFSApplicationId__c",
      "Acc_ProjectNumber__c",
      "Acc_ProjectSource__c",
      "Acc_ProjectSummary__c",
      "Acc_ProjectTitle__c",
      "Acc_PublicDescription__c",
      "Acc_StartDate__c",
      "Acc_TotalProjectCosts__c",
      "Acc_ProjectStatus__c",
      "toLabel(Acc_ProjectStatus__c) ProjectStatusName",
      "Acc_PCRsForReview__c",
      "Acc_PCRsUnderQuery__c",
      "Acc_ClaimsForReview__c",
      "Acc_ClaimsOverdue__c",
      "Acc_ClaimsUnderQuery__c",
      "Acc_TrackingClaimStatus__c",
      "toLabel(Acc_TrackingClaimStatus__c) ClaimStatusName",
      "Acc_NumberOfOpenClaims__c",
      "Acc_LeadParticipantName__c",
      "Acc_Duration__c",
      "Acc_NumberofPeriods__c",
      "Acc_CurrentPeriodNumber__c",
      "Acc_CurrentPeriodStartDate__c",
      "Acc_CurrentPeriodEndDate__c",
      "Acc_NonFEC__c",
      "Loan_LoanEndDate__c",
      "Loan_LoanAvailabilityPeriodLength__c",
      "Loan_LoanExtensionPeriodLength__c",
      "Loan_LoanRepaymentPeriodLength__c",
    ],
    "salesforceObjectName": "Acc_Project__c",
  },
  "recordTypes": RecordTypeRepository {
    "getSalesforceConnection": [Function],
    "logger": Logger {
      "identifier": "Context",
      "options": Object {
        "logLevel": 5,
        "prefixLines": Array [
          "user@email.com",
        ],
      },
    },
    "mapper": SalesforceRecordTypeMapper {
      "clock": Clock {},
    },
    "payloadErrors": Object {
      "FALLBACK_QUERY_ERROR": "FALLBACK_QUERY_ERROR",
      "INSUFFICIENT_ACCESS_OR_READONLY": "INSUFFICIENT_ACCESS_OR_READONLY",
      "UNABLE_TO_LOCK_ROW": "SF_UPDATE_ALL_FAILURE",
    },
    "salesforceFieldNames": Array [
      "Id",
      "Name",
      "SobjectType",
    ],
    "salesforceObjectName": "RecordType",
  },
}
`;

exports[`constructErrorResponse should return the configured AppError if it is a FileTypeNotAllowedError 1`] = `[Error: file-not-found]`;

exports[`constructErrorResponse should return the configured AppError if it is a SalesforceTokenError 1`] = `[Error: AUTHENTICATION_ERROR]`;

exports[`constructErrorResponse should return the configured NotFoundError if it is a SalesforceInvalidFilterError 1`] = `[Error: Not Found]`;

exports[`constructErrorResponse should return the configured an unknown AppError 1`] = `[Error: unknown-error]`;
